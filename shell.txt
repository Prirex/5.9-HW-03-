1.	Создать двух пользователей (с помощью метода User.objects.create_user('username')).
from news.models import User
u1 = User.objects.create_user(username='Roman')
u2 = User.objects.create_user(username='Maxim')


2.	Создать два объекта модели Author, связанные с пользователями.
a1 = Author.objects.create(user=u1, full_name="Романов Роман Петрович")
a2 = Author.objects.create(user=u2, full_name="Иванов Максим Сергеевич")


3.	Добавить 4 категории в модель Category.
cat1 = Category.objects.create(category_name="Свежие новости")
cat1.save()
cat2 = Category.objects.create(category_name="Политика")
cat2.save()
cat3 = Category.objects.create(category_name="Игры")
cat3.save()
cat4 = Category.objects.create(category_name="Спорт")
cat4.save()
cat5 = Category.objects.create(category_name="Погода")
cat5.save()

4.	Добавить 2 статьи и 1 новость.
post1 = Post.objects.create(title="First Post On This Portal", text=" Тестовая новость первого новостного проекта!", type='NE', author=a1)
post1.save()
post2 = Post.objects.create(title="Test stat", text="Первая тестовая статья проекта", type='AR', author=a2)
post2.save()
post3 = Post.objects.create(title="Test stat 2 ", text="Вторая тестовая статья проекта ", type='AR', author=a2)
post3.save()

5.	Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
post1.category.add(1)
post1.save()
post1.category.add(2)
post1.save()
post2.category.add(5) 
post2.save()
post3.category.add(3)
post3.save()

6.	Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
comm1 = Comment.objects.create(text="Тестовый комментарий", post=post1, user=u2)
comm1.save()
comm2 = Comment.objects.create(text="Успехов!", post=post1, user=u2)
comm2.save()
comm3 = Comment.objects.create(text="Только вперед", post=post2, user=u1)
comm3.save()
comm4 = Comment.objects.create(text="А где про спорт?", post=post2, user=u1)
comm4.save()


7.	Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
post1.like_post()
post2.dislike_post()
comm1.like_comment()
comm3.dislike_comment()
comm4.like_comment()
post3.like_post()
post3.like_post()
comm4.like_comment()
post1.dislike_post()
comm4.like_comment()

8.	Обновить рейтинги пользователей.
a1.update_rating()
a2.update_rating()


9.	Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
best_user = Author.objects.order_by('-rating').values('user__username', 'rating').first()

10.	Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
posts = Post.objects.order_by('-rating')
best_post = posts.values('creation_date', 'author__user__username', 'rating', 'title').first()  
best_preview = posts.first().preview()

11.	Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Post.objects.all().order_by('-rating').values('creation_date', 'author', 'rating', 'text').first()